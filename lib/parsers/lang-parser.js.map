{"version":3,"sources":["../../src/lib/parsers/lang-parser.js"],"names":["parseLangFile","extractLangKeys","fileContent","langJson","JSON","parse","flattenLang","object","result","parentKey","forEach","key","value","resultKey"],"mappings":";;;;;;;;;;;;;;QAKgBA,a,GAAAA,a;QAWAC,e,GAAAA,e;;;;AAhBhB;;;;;AAKO,SAASD,aAAT,CAAuBE,WAAvB,EAAoC;AACvC,QAAMC,WAAWC,KAAKC,KAAL,CAAWH,WAAX,CAAjB;;AAEA,WAAOI,YAAYH,QAAZ,CAAP;AACH;;AAED;;;;;AAKO,SAASF,eAAT,CAAyBC,WAAzB,EAAsC;AACzC,WAAO,oBAAYF,cAAcE,WAAd,CAAZ,CAAP;AACH;;AAED;;;;;;;;AAQA,SAASI,WAAT,CAAqBC,MAArB,EAA0D;AAAA,QAA7BC,MAA6B,uEAApB,EAAoB;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;;AACtD,wBAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAACC,GAAD,EAAS;AACjC,YAAMC,QAAQL,OAAOI,GAAP,CAAd;AACA,YAAME,YAAYJ,YAAeA,SAAf,SAA4BE,GAA5B,GAAoCA,GAAtD;;AAEA,YAAI,QAAOC,KAAP,uDAAOA,KAAP,OAAiB,QAArB,EAA+B;AAC3BN,wBAAYM,KAAZ,EAAmBJ,MAAnB,EAA2BK,SAA3B;AACA;AACH;;AAEDL,eAAOK,SAAP,IAAoBD,KAApB;AACH,KAVD;;AAYA,WAAOJ,MAAP;AACH","file":"lang-parser.js","sourcesContent":["/**\n * Parse a language file\n * @param {string} fileContent\n * @return {Object}\n */\nexport function parseLangFile(fileContent) {\n    const langJson = JSON.parse(fileContent);\n\n    return flattenLang(langJson);\n}\n\n/**\n * Extract language keys from a language file\n * @param {string} fileContent\n * @return {string[]}\n */\nexport function extractLangKeys(fileContent) {\n    return Object.keys(parseLangFile(fileContent));\n}\n\n/**\n * Flatten a language object\n * @private\n * @param {Object} object\n * @param {Object} [result={}]\n * @param {string} [parentKey='']\n * @return {Object}\n */\nfunction flattenLang(object, result = {}, parentKey = '') {\n    Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const resultKey = parentKey ? `${parentKey}.${key}` : key;\n\n        if (typeof value === 'object') {\n            flattenLang(value, result, resultKey);\n            return;\n        }\n\n        result[resultKey] = value;\n    });\n\n    return result;\n}\n"]}