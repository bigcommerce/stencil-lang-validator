{"version":3,"sources":["../src/lib/file-path-finder.js"],"names":["findFilePaths","filePattern","options","absolute","resolve","reject","error","filePaths"],"mappings":";;;;;;;;;;QAOgBA,a,GAAAA,a;;AAPhB;;;;;;AAEA;;;;;AAKO,SAASA,aAAT,CAAuBC,WAAvB,EAAoC;AACvC,QAAMC,UAAU,EAAEC,UAAU,IAAZ,EAAhB;;AAEA,WAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,4BAAKJ,WAAL,EAAkBC,OAAlB,EAA2B,UAACI,KAAD,EAAQC,SAAR,EAAsB;AAC7C,gBAAID,KAAJ,EAAW;AACPD,uBAAOC,KAAP;AACH,aAFD,MAEO;AACHF,wBAAQG,SAAR;AACH;AACJ,SAND;AAOH,KARM,CAAP;AASH","file":"file-path-finder.js","sourcesContent":["import glob from 'glob';\n\n/**\n * Get file paths from a glob pattern\n * @param {string} filePattern\n * @return {void}\n */\nexport function findFilePaths(filePattern) {\n    const options = { absolute: true };\n\n    return new Promise((resolve, reject) => {\n        glob(filePattern, options, (error, filePaths) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(filePaths);\n            }\n        });\n    });\n}\n"]}