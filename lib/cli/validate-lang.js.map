{"version":3,"sources":["../../src/lib/cli/validate-lang.js"],"names":["validateLang","config","child","fork","join","__dirname","spinner","resolve","reject","on","error","result","fail","succeed","errors","kill","errorCode","Error","start","send"],"mappings":";;;;;;;;;;kBAUwBA,Y;;AAVxB;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;AAKe,SAASA,YAAT,GAAmC;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAC9C,QAAMC,QAAQ,wBAAaC,IAAb,CAAkB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAlB,CAAd;AACA,QAAMC,UAAU,yBAAY,8BAAZ,CAAhB;;AAEA,WAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCN,cAAMO,EAAN,CAAS,SAAT,EAAoB,gBAAuB;AAAA,gBAApBC,KAAoB,QAApBA,KAAoB;AAAA,gBAAbC,MAAa,QAAbA,MAAa;;AACvC,gBAAID,KAAJ,EAAW;AACPJ,wBAAQM,IAAR;AACA,sCAASF,KAAT;AACAF,uBAAOE,KAAP;AACH,aAJD,MAIO;AACHJ,wBAAQO,OAAR;AACA,iDAAaF,OAAOG,MAApB;AACAP,wBAAQI,MAAR;AACH;;AAEDT,kBAAMa,IAAN;AACH,SAZD;;AAcAb,cAAMO,EAAN,CAAS,MAAT,EAAiB,UAACO,SAAD,EAAe;AAC5B,gBAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AAED,gBAAMN,QAAQ,IAAIO,KAAJ,CAAU,mCAAV,CAAd;;AAEAX,oBAAQM,IAAR;AACA,kCAASF,KAAT;AACAF,mBAAOE,KAAP;AACH,SAVD;;AAYAJ,gBAAQY,KAAR;AACAhB,cAAMiB,IAAN,CAAWlB,MAAX;AACH,KA7BM,CAAP;AA8BH","file":"validate-lang.js","sourcesContent":["import childProcess from 'child_process';\nimport path from 'path';\nimport { logError, logProgress } from '../logger';\nimport { reportErrors } from '../error-reporter';\n\n/**\n * A CLI command for validating language files\n * @param {ValidatorConfig} [config = {}]\n * @return {Promise<ValidationResult>}\n */\nexport default function validateLang(config = {}) {\n    const child = childProcess.fork(path.join(__dirname, 'run'));\n    const spinner = logProgress('Validating language files...');\n\n    return new Promise((resolve, reject) => {\n        child.on('message', ({ error, result }) => {\n            if (error) {\n                spinner.fail();\n                logError(error);\n                reject(error);\n            } else {\n                spinner.succeed();\n                reportErrors(result.errors);\n                resolve(result);\n            }\n\n            child.kill();\n        });\n\n        child.on('exit', (errorCode) => {\n            if (!errorCode) {\n                return;\n            }\n\n            const error = new Error('The validation ended unexpectedly');\n\n            spinner.fail();\n            logError(error);\n            reject(error);\n        });\n\n        spinner.start();\n        child.send(config);\n    });\n}\n"]}